name: Release Tauri

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_name: ${{ steps.release-name.outputs.name }}
      upload_url: ${{ steps.create-release.outputs.upload_url }}

    steps:
      - name: Generate release name
        id: release-name
        run: |
          echo "name=ruci-gui-$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: auto-release-${{ steps.release-name.outputs.name }}
          release_name: ${{ steps.release-name.outputs.name }}
          draft: false
          prerelease: false

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install frontend dependencies
        run: bun install

      - name: Build Tauri
        run: bun run tauri build

      - name: Upload Mac DMG
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/dmg/*.dmg
          asset_name: ruci-gui.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload Windows EXE
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/ruci_gui.exe
          asset_name: ruci_gui.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload Linux Bundles
        if: matrix.platform == 'ubuntu-latest'
        run: |
          for file in src-tauri/target/release/bundle/{appimage,deb,rpm}/*; do
            if [ -f "$file" ]; then
              asset_name=$(basename "$file")
              curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: application/octet-stream" \
                --data-binary "@$file" \
                "${{ needs.create-release.outputs.upload_url }}?name=$asset_name"
            fi
          done

  build-android:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android, armv7-linux-androideabi, i686-linux-android, x86_64-linux-android

      - name: Install frontend dependencies
        run: bun install

      - name: Initialize Tauri Android
        run: |
          bun run tauri android init
          bunx tauri icon

      - name: Build Android
        run: bun run tauri android build

      - name: Sign APK
        run: |
          chmod +x ./scripts/sign_apk.sh
          ./scripts/sign_apk.sh
          mv src-tauri/gen/android/app/build/outputs/apk/universal/release/ruci-gui-universal-release-signed.apk ./

      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ruci-gui-universal-release-signed.apk
          asset_name: ruci-gui-universal-release-signed.apk
          asset_content_type: application/vnd.android.package-archive
